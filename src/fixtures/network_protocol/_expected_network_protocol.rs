// This file is @generated by ppsc-build.
extern crate alloc;
use parity_scale_codec::{Encode, Decode};

#[derive(Encode, Decode)]
pub struct Entity {
    pub id: String,
    pub ip_address: u32,
}
#[derive(Encode, Decode)]
pub struct AmountDetails {
    pub value: u64,
    pub is_locked: bool,
}
#[derive(Encode, Decode)]
pub struct TransactionRequest {
    pub is_priority: bool,
    pub transaction_id: u64,
    pub creation_time: i64,
    pub memo: String,
    pub associated_ids: alloc::vec::Vec<String>,
    pub metadata: alloc::collections::BTreeMap<String, u32>,
    pub sender: Option<Entity>,
    pub status: i32,
    pub result: Option<transaction_request::Result>,
}
/// Nested message and enum types in `TransactionRequest`.
pub mod transaction_request {
    extern crate alloc;
    use parity_scale_codec::{Decode, Encode};

        #[derive(Encode, Decode)]
    pub enum Result {
        Error(String),
        Amount(super::AmountDetails),
    }
}
#[derive(Encode, Decode)]
pub enum TransactionStatus {
    StatusUnspecified = 0,
    StatusPending = 1,
    StatusConfirmed = 2,
    StatusRejected = 3,
}
impl TransactionStatus {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::StatusUnspecified => "STATUS_UNSPECIFIED",
            Self::StatusPending => "STATUS_PENDING",
            Self::StatusConfirmed => "STATUS_CONFIRMED",
            Self::StatusRejected => "STATUS_REJECTED",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> Option<Self> {
        match value {
            "STATUS_UNSPECIFIED" => Some(Self::StatusUnspecified),
            "STATUS_PENDING" => Some(Self::StatusPending),
            "STATUS_CONFIRMED" => Some(Self::StatusConfirmed),
            "STATUS_REJECTED" => Some(Self::StatusRejected),
            _ => None,
        }
    }
}
